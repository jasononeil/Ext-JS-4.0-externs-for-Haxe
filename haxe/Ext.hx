package ;

import ext.Base;
import ext.Class;
import ext.data.Store;
import ext.Element;
import ext.env.Browser;
import ext.env.FeatureDetector;
import ext.env.OS;
import ext.MessageBox;
import js.Dom;

@:native ("Ext")
extern class Ext {

	public static var BLANK_IMAGE_URL:String;
	public static var browser:Browser;
	public static var chromeVersion:Float;
	public static var enableFx:Bool;
	public static var enableGarbageCollector:Bool;
	public static var enableListenerCollection:Bool;
	public static var enableNestedListenerRemoval:Bool;
	public static var enumerables:Array <String>;
	public static var features:FeatureDetector;
	public static var firefoxVersion:Float;
	public static var ieVersion:Float;
	public static var isChrome:Bool;
	public static var isFF3_0:Bool;
	public static var isFF3_5:Bool;
	public static var isFF3_6:Bool;
	public static var isFF4:Bool;
	public static var isFF5:Bool;
	public static var isGecko3:Bool;
	public static var isGecko4:Bool;
	public static var isGecko5:Bool;
	public static var isGecko:Bool;
	public static var isIE6:Bool;
	public static var isIE7:Bool;
	public static var isIE8:Bool;
	public static var isIE9:Bool;
	public static var isIE:Bool;
	public static var isLinux:Bool;
	public static var isMac:Bool;
	public static var isOpera10_5:Bool;
	public static var isOpera:Bool;
	public static var isReady:Bool;
	public static var isSafari2:Bool;
	public static var isSafari3:Bool;
	public static var isSafari4:Bool;
	public static var isSafari5:Bool;
	public static var isSafari:Bool;
	public static var isSecure:Bool;
	public static var isWebKit:Bool;
	public static var isWindows:Bool;
	public static var log:Dynamic;
	public static var Msg:MessageBox;
	public static var operaVersion:Float;
	public static var os:OS;
	public static var safariVersion:Float;
	public static var scopeResetCSS:Bool;
	public static var SSL_SECURE_URL:String;
	public static var USE_NATIVE_JSON:Bool;
	public static var useShims:Bool;
	public static var webKitVersion:Float;

	//public static function callback (callback:Dynamic, ?scope:Dynamic, ?args:Array <Dynamic>, ?delay:Float):Void;
	//public static function override (cls:Dynamic, overrides:Dynamic):Void;
	public static function addBehaviors (obj:Dynamic):Void;
	public static function application (config:Dynamic):Void;
	public static function apply (object:Dynamic, config:Dynamic, defaults:Dynamic):Dynamic;
	public static function applyIf (object:Dynamic, config:Dynamic):Dynamic;
	public static function bind (fn:Dynamic, ?scope:Dynamic, ?args:Array <Dynamic>, ?appendArgs:Dynamic):Dynamic;
	public static function clone (item:Dynamic):Dynamic;
	public static function copyTo (dest:Dynamic, source:Dynamic, names:Array <Dynamic>, ?usePrototypeKeys:Bool):Dynamic;
	public static function create (type:String, config:Dynamic):Dynamic;
	public static function createByAlias (alias:String, args:Dynamic):Dynamic;
	public static function decode (json:String, ?safe:Bool):Dynamic;
	public static function defer (fn:Dynamic, millis:Float, ?scope:Dynamic, ?args:Array <Dynamic>, ?appendArgs:Dynamic):Float;
	public static function define (className:String, data:Dynamic, ?createdFn:Dynamic):Base;
	public static function destroy (arg1:Dynamic):Void;
	public static function destroyMembers (o:Dynamic, args:String):Void;
	public static function each (iterable:Dynamic, fn:Dynamic, ?scope:Dynamic, ?reverse:Bool):Bool;
	public static function emptyFn ():Void;
	public static function encode (o:Dynamic):String;
	public static function exclude (excludes:Array <Dynamic>):Dynamic;
	public static function fly (el:Dynamic, ?named:String):Element;
	public static function get (el:Dynamic):Element;
	public static function getBody ():Void;
	public static function getClass (object:Dynamic):Class;
	public static function getClassName (object:Dynamic):String;
	public static function getCmp (id:String):Void;
	public static function getDoc ():Void;
	public static function getDom (el:Dynamic):Void;
	public static function getHead ():Void;
	public static function getOrientation ():String;
	public static function getScrollbarSize (?force:Bool):Dynamic;
	public static function getStore (store:Dynamic):Store;
	public static function htmlDecode (value:String):String;
	public static function htmlEncode (value:String):String;
	public static function id (?el:Dynamic, ?prefix:String):String;
	public static function isArray (target:Dynamic):Bool;
	public static function isBoolean (value:Dynamic):Bool;
	public static function isDate (object:Dynamic):Bool;
	public static function isDefined (value:Dynamic):Bool;
	public static function isElement (value:Dynamic):Bool;
	public static function isEmpty (value:Dynamic, ?allowEmptyString:Bool):Bool;
	public static function isFunction (value:Dynamic):Bool;
	public static function isIterable (value:Dynamic):Bool;
	public static function isNumber (value:Dynamic):Bool;
	public static function isNumeric (value:Dynamic):Bool;
	public static function isObject (value:Dynamic):Bool;
	public static function isPrimitive (value:Dynamic):Bool;
	public static function isString (value:Dynamic):Bool;
	public static function isTextNode (value:Dynamic):Bool;
	public static function iterate (object:Dynamic, fn:Dynamic, ?scope:Dynamic):Void;
	public static function merge (object:Dynamic):Dynamic;
	public static function namespace (namespace1:String, namespace2:String, etc:String):Dynamic;
	public static function ns (namespace1:String, namespace2:String, etc:String):Dynamic;
	public static function onDocumentReady ():Void;
	public static function onReady (fn:Dynamic, ?scope:Dynamic, ?withDomReady:Bool):Void;
	public static function pass (fn:Dynamic, args:Array <Dynamic>, ?scope:Dynamic):Dynamic;
	public static function preg (ptype:String, cls:Dynamic):Void;
	public static function query (path:String, ?root:HtmlDom):Array <HtmlDom>;
	public static function regStore (id:String, config:Dynamic):Void;
	public static function removeNode (node:HtmlDom):Void;
	public static function require (expressions:Array <Dynamic>, ?fn:Dynamic, ?scope:Dynamic, ?excludes:Array <Dynamic>):Void;
	public static function select (selector:String):Dynamic;
	public static function syncRequire (expressions:Array <Dynamic>, ?fn:Dynamic, ?scope:Dynamic, ?excludes:Array <Dynamic>):Void;
	public static function toArray (iterable:Dynamic, ?start:Float, ?end:Float):Array <Dynamic>;
	public static function typeOf (value:Dynamic):String;
	public static function urlAppend (url:String, s:String):Void;
	public static function valueFrom (value:Dynamic, defaultValue:Dynamic, ?allowBlank:Bool):Dynamic;
	public static function widget (name:String, args:Dynamic):Dynamic;

}